import Client from '@vouched/client';
import { utils } from '@vouched/client';

import config from './config';

describe('client', () => {
  describe('submit', () => {
    test('submit - success', async () => {
      const client = Client(config.API_KEY);
      const userPhotoBase64 = await utils.imageToBase64(
        '/opt/app/tests/data/large.png'
      );
      const idPhotoBase64 = await utils.imageToBase64(
        '/opt/app/tests/data/large.jpg'
      );
      const job = await client.submit({
        userPhoto: userPhotoBase64,
        idPhoto: idPhotoBase64,
        callbackURL: 'https://www.google.com',
        type: 'id-verification',
        firstName: 'Janice',
        lastName: 'Way',
        dob: '06/22/1990'
      });
      expect(typeof job.id).toBe('string');
    });
    test('submit - bad date', async () => {
      const client = Client(config.API_KEY);
      const userPhotoBase64 = await utils.imageToBase64(
        '/opt/app/tests/data/large.png'
      );
      const idPhotoBase64 = await utils.imageToBase64(
        '/opt/app/tests/data/large.jpg'
      );
      await client
        .submit({
          userPhoto: userPhotoBase64,
          idPhoto: idPhotoBase64,
          callbackURL: 'https://www.google.com',
          type: 'id-verification',
          firstName: 'Janice',
          lastName: 'Way',
          dob: '13/22/1990'
        })
        .catch(e =>
          expect(e.errors).toMatchObject([
            {
              type: 'InvalidRequestError',
              message: '13/22/1990 is not a valid date in the format MM/DD/YYYY'
            }
          ])
        );
    });
  });
});
